<Window x:Class="SeatingManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SeatingManager"
        mc:Ignorable="d"
        
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        ShowInTaskbar="True"
        
        Title="MainWindow" Height="938.5" Width="1532" Background="#FF202028" Loaded="Window_Loaded" MouseDown="Window_MouseDown" WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <local:SeatingManagerDBDataSet x:Key="seatingManagerDBDataSet"/>
        <CollectionViewSource x:Key="customersViewSource" Source="{Binding customers, Source={StaticResource seatingManagerDBDataSet}}"/>
        <CollectionViewSource x:Key="usersViewSource" Source="{Binding users, Source={StaticResource seatingManagerDBDataSet}}" />
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0"
                        Padding="5,5,5,5" Margin="0,0,0,0" BorderBrush="#00E0E0E0">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#00DCDCDC"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF3AC6AB" Offset="0.201"/>
                                            <GradientStop Color="#FF2D74A0" Offset="1"/>
                                            <GradientStop Color="#FF00F9D7" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="2"/>

                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="#FFE8E8E8"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF5A5B6E" Offset="0.096"/>
                                            <GradientStop Color="#FF434551" Offset="0.77"/>
                                            <GradientStop Color="#FFAFAFB2" Offset="0.013"/>
                                            <GradientStop Color="#FF2B2B2E" Offset="1"/>
                                            <GradientStop Color="#FF434551" Offset="0.933"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="BorderBrush" Value="#FF373542"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#FF373542"/>
            <Setter Property="VerticalGridLinesBrush" Value="{x:Null}"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderHeight" Value="25"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>

        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF40424E" Offset="0"/>
                        <GradientStop Color="#FF32353E" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderBrush" Value="#FF373542"/>
            <Setter Property="Background" Value="#FF272731" />
            <Setter Property="Foreground" Value="WhiteSmoke"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF23232B" Offset="1"/>
                                <GradientStop Color="#FF373740" Offset="0"/>
                                <GradientStop Color="#FF26262E" Offset="0.498"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF00DDFD"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF23232B" Offset="1"/>
                                <GradientStop Color="#FF373740" Offset="0"/>
                                <GradientStop Color="#FF26262E" Offset="0.498"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF00DDFD"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  x:Key="mainBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF858593" Offset="0"/>
                        <GradientStop Color="#FF434551" Offset="0.983"/>
                        <GradientStop Color="#FF4B4D5C" Offset="0.527"/>
                        <GradientStop Color="#FF57586A" Offset="0.021"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FF3C3C3C"/>
            <Setter Property="Foreground" Value="#FFFDFDFD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="0"
                            Padding="4,2" 
                            CornerRadius="2" 
                            BorderBrush="#FF646464"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Background" Value="#FF6E6F85" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#FF191A1F"/>
            <Setter Property="BorderBrush" Value="#FF292929"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>


        <Style x:Key="userActiveStyle" TargetType="Button">
            <Setter Property="Background" Value="Red" />
            <Setter Property="Content" Value="No"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding isOnDuty}" Value="1">
                    <Setter Property="Button.Background" Value="Green"/>
                    <Setter Property="Content" Value="Yes"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Window">
            <Setter Property="Background" Value="#FF1F1F27" />
        </Style>
        <CollectionViewSource x:Key="reservationViewSource" Source="{Binding Reservation, Source={StaticResource seatingManagerDBDataSet}}"/>
    </Window.Resources>


    <Grid Background="#FF1F1F27" DataContext="{StaticResource reservationViewSource}">
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TabControl x:Name="maingrid" HorizontalAlignment="Left" Height="900" VerticalAlignment="Top" Width="1200" Margin="300,40,0,0" Background="{x:Null}" BorderBrush="{x:Null}">
            <TabItem x:Name="tab_Tables" Header="Tables" Margin="0,0,0,0" Width="108" HorizontalContentAlignment="Stretch" Style="{DynamicResource TabItemStyle1}" Height="33" >
                <Canvas>
                    <WrapPanel x:Name="wpTableMenu" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="1090" Canvas.Left="10" Canvas.Top="10">
                        <WrapPanel.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="#FF1F1F27"/>
                                <GradientStop Color="#FF1F1F27" Offset="0.991"/>
                                <GradientStop Color="#FF373542" Offset="0.034"/>
                                <GradientStop Color="#FF373542" Offset="0.959"/>
                            </LinearGradientBrush>
                        </WrapPanel.Background>
                        <Button x:Name="btnMergeTables" Content="Merge Tables" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Click="btnAddBtn_Click" Height="33" Margin="4" Style="{DynamicResource mainBtnStyle}"/>
                        <Button x:Name="btnModifyTables" Content="Modify Table" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Height="33" Margin="4" Style="{DynamicResource mainBtnStyle}"/>
                        <Button x:Name="btnAddCustomer" Content="Add Customer" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Height="33" Margin="4" Click="btnAddCustomer_Click" Style="{DynamicResource mainBtnStyle}"/>
                        <Button x:Name="btnAssignCustomer" Content="Assign Customer" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Height="33" Margin="4" Click="btnAssignCustomer_Click" Style="{DynamicResource mainBtnStyle}"/>
                        <Button x:Name="btnCreateReservation" Content="Create Reservation" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Height="33" Margin="4" Style="{DynamicResource mainBtnStyle}" Click="btnCreateReservation_Click"/>
                        <Button x:Name="btnClearTable" Content="Clear Table" HorizontalAlignment="Left" VerticalAlignment="Top" Width="108" Height="33" Margin="4" Click="btnClearTable_Click" Style="{DynamicResource mainBtnStyle}"/>
                    </WrapPanel>

                    <Grid x:Name="background" HorizontalAlignment="Left" Height="700" VerticalAlignment="Top" Width="1090" Margin="0,59,0,0">

                        <Canvas x:Name="tables2" HorizontalAlignment="Left" Height="630" VerticalAlignment="Top" Width="770" Margin="0,0,0,0">

                        </Canvas>

                        <Canvas x:Name="tables" HorizontalAlignment="Left" Height="630" VerticalAlignment="Top" Width="770" Margin="0,0,0,0">

                        </Canvas>
                    </Grid>
                </Canvas>
            </TabItem>
            <TabItem x:Name="tab2" Loaded="tab2_Loaded" Margin="2,0,-2,0" Width="108" HorizontalContentAlignment="Stretch" Style="{DynamicResource TabItemStyle1}" Height="33" VerticalAlignment="Top" Header="Servers">
                <Grid Margin="4,0,2,1" Height="795" VerticalAlignment="Bottom">
                    <DataGrid x:Name="usersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource usersViewSource}}" Margin="54,0,470,277" RowDetailsVisibilityMode="VisibleWhenSelected" Width="664">
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn x:Name="userIDColumn" Binding="{Binding userID}" Header="user ID" IsReadOnly="True" Width="SizeToHeader"/>-->
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding firstName}" Header="FIRSTNAME" Width="120"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding lastName}" Header="LASTNAME" Width="120"/>
                            <!--<DataGridTextColumn x:Name="roleColumn" Binding="{Binding role}" Header="ROLE" Width="76"/>-->
                            <DataGridTextColumn x:Name="isActiveColumn" Binding="{Binding isActive}" Header="IS ACTIVE" Width="75"/>
                            <DataGridTextColumn x:Name="isOnDutyColumn" Binding="{Binding isOnDuty}" Header="IS ON DUTY" Width="75"/>
                            <DataGridTextColumn x:Name="sectionIDColumn" Binding="{Binding sectionID}" Header="SECTION" Width="75"/>
                            <DataGridTextColumn x:Name="titleColumn" Binding="{Binding title}" Header="TITLE" Width="120"/>
                            <DataGridTemplateColumn x:Name="onDuty" Header="ON DUTY" Width="55">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Name="btnSetOnDuty" Style="{StaticResource userActiveStyle}"  Click="btnbtnSetOnDuty_Click" Content="A" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto"></Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <DataGrid x:Name="serversDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource usersViewSource}}" Margin="12,72,1242,601" RowDetailsVisibilityMode="VisibleWhenSelected" Background="{x:Null}" Height="265">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="firstNameColumn1" Binding="{Binding firstName}" Header="FIRST" Width="75"/>
                <DataGridTextColumn x:Name="lastNameColumn1" Binding="{Binding lastName}" Header="LAST" Width="75"/>
                <DataGridTemplateColumn MaxWidth="35" MinWidth="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btndeleteServer"  Click="btnDeleteServer_Click" Style="{DynamicResource mainBtnStyle}" Content="X" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!--<DataGrid x:Name="reservationDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="11,712,1264,28" RowDetailsVisibilityMode="VisibleWhenSelected" Background="{x:Null}" Width="279">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="customerNameColumn" Binding="{Binding customerName}" Header="CUSTOMER NAME" Width="140"/>
                <DataGridTemplateColumn x:Name="deleteCustColumn" Header="" Width="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btnDeleteCust" Content="X" Tag="{Binding customerID}" Style="{DynamicResource mainBtnStyle}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="btnDeleteCust_Click"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn x:Name="checkInReservationColumn" Header="" Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btnCheckInReservation" Content="Check In" Tag="{Binding customerID}" Style="{DynamicResource mainBtnStyle}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="auto" Click="btnCheckInReservation_Click"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>-->
        <Label Content="Server's Currently On Duty" HorizontalAlignment="Left" Margin="12,43,0,0" VerticalAlignment="Top" Width="278" HorizontalContentAlignment="Center" Background="#FF3D404B" Foreground="White" FontSize="16" FontWeight="Bold" Height="31" BorderBrush="#FF3D404B"/>
        <TextBox x:Name="txtTest" HorizontalAlignment="Left" Height="826" Margin="1500,100,-166,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="220" Visibility="Hidden"/>
        <Button x:Name="btnClose" IsCancel="true" BorderBrush="Black" Margin="1500,-2,0,0" VerticalAlignment="Top" Height="26" Click="btnClose_Click" Background="#FF2D2D30" Content="X" BorderThickness="1" Padding="1" HorizontalAlignment="Left" Width="32"/>
        <Rectangle Fill="#FF1A1B20" HorizontalAlignment="Left" Height="26" Margin="-4,-2,0,0" Stroke="Black" VerticalAlignment="Top" Width="1504"/>
        <DataGrid x:Name="customersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="12,0,0,292" RowDetailsVisibilityMode="VisibleWhenSelected" Background="{x:Null}" UseLayoutRounding="False" HorizontalAlignment="Left" Width="279" Height="248" VerticalAlignment="Bottom">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="reserverNameColumn" Binding="{Binding customerName}" Header="CUSTOMER NAME" Width="140"/>
                <DataGridTemplateColumn x:Name="deleteReserverColumn" Header="" Width="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button x:Name="btnDeleteCust" Content="X" Tag="{Binding customerID}" Style="{DynamicResource mainBtnStyle}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="btnDeleteCust_Click"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid x:Name="reservationDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="12,714,1242,42" RowDetailsVisibilityMode="VisibleWhenSelected">
            <DataGrid.Columns>
                <DataGridTemplateColumn x:Name="reservationDateTimeColumn" Header="Reservation Time" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding ReservationDateTime, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="customerIDColumn" Binding="{Binding CustomerID}" Header="Customer ID" Width="120"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Customer List:" HorizontalAlignment="Left" Height="30" Margin="12,370,0,0" VerticalAlignment="Top" Width="279"  HorizontalContentAlignment="Center" Foreground="White" Background="#FF3D404B" FontSize="16" FontWeight="Bold"/>
        <Label Content="Reservation List:" HorizontalAlignment="Left" Height="32" Margin="12,684,0,0" VerticalAlignment="Top" Width="278"  HorizontalContentAlignment="Center" Foreground="White" Background="#FF3D404B" FontSize="16" FontWeight="Bold"/>
    </Grid>
</Window>


